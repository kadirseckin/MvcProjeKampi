@model EntityLayer.Concrete.Writer

@{
    ViewBag.Title = "EditWriter";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}


<br />
@using (Html.BeginForm("EditWriter","Writer",FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h3>Yazar düzenleme sayfası</h3>
    <hr />
    @Html.HiddenFor(x => x.WriterID)

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.WriterName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.WriterName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.WriterName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.WriterSurName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.WriterSurName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.WriterSurName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.WriterTitle, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.WriterTitle, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.WriterTitle, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.WriterAbout, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.WriterAbout, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.WriterAbout, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.WriterMail, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.WriterMail, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.WriterMail, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.WriterPassword, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.WriterPassword, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.WriterPassword, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">

        @Html.LabelFor(model => model.WriterImage, htmlAttributes: new { @class = "control-label col-md-2" })
        @Html.HiddenFor(model => model.WriterImage)

        <div class="col-md-10">
            <input type="file" name="profilePicture" id="profilePicture" class="form-control" />
            <span><i>Lütfen jpg, jpeg ya da png formatı kullanın.</i></span>
        </div>

    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-success" />
        </div>
    </div>
</div>
}


